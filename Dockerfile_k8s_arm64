FROM ubuntu:20.04

ARG DEBIAN_FRONTEND="noninteractive"

RUN apt-get update -qq && apt-get install -qq -y \
  autoconf \
  automake \
  build-essential \
  cmake \
  libfreetype6-dev \
  libtool \
  pkg-config \
  texinfo \
  wget \
  yasm \
  nasm \
  zlib1g-dev \
  libnuma-dev \
  git \
  libx264-dev \
  libx265-dev \
  libopus-dev \
  libmp3lame-dev \
  libfdk-aac-dev \
  libvpx-dev \
  python3-setuptools \
  python3-pip \
  python3-venv \
  libc6 \
  libc6-dev \
  unzip \
  libnuma1 \
  libnuma-dev \
  libunistring-dev \
  ninja-build meson \
  libffi-dev \
  && rm -rf /var/lib/apt/lists/*

#RUN mkdir /nvenc
#WORKDIR /nvenc
#RUN git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git
#RUN cd nv-codec-headers && make install

RUN mkdir /vmaf
WORKDIR /vmaf
RUN wget -q -O v2.3.0.tar.gz https://github.com/Netflix/vmaf/archive/refs/tags/v2.3.0.tar.gz
RUN tar xvf v2.3.0.tar.gz
WORKDIR /vmaf/vmaf-2.3.0/libvmaf
RUN meson build --buildtype release
RUN ninja -vC build
RUN ninja -vC build install

RUN mkdir /ffmpeg_sources
WORKDIR /ffmpeg_sources
RUN git -C aom pull 2> /dev/null || git clone --depth 1 https://aomedia.googlesource.com/aom
RUN mkdir -p aom_build
WORKDIR /ffmpeg_sources/aom_build
RUN PATH="$HOME/bin:$PATH" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$HOME/ffmpeg_build" -DENABLE_SHARED=off -DENABLE_NASM=on ../aom 
RUN PATH="$HOME/bin:$PATH" make -j 8
RUN make install

COPY ./docker/install_ffmpeg.sh /install_ffmpeg.sh
RUN chmod +x /install_ffmpeg.sh && \
  /install_ffmpeg.sh && \
  cp /root/bin/ffmpeg /usr/local/bin/ffmpeg && \
  cp /root/bin/ffprobe /usr/local/bin/ffprobe

COPY requirements.txt /processing-chain/requirements.txt
WORKDIR /processing-chain

RUN pip3 install --no-cache-dir -r requirements.txt
RUN pip3 install git+https://github.com/bitmovin/bitmovin-python.git@v1.21.0
ENV NAME pnats_processing_chain
RUN mkdir /proponent-databases
COPY . /processing-chain
RUN chown -R 1000:1000 /processing-chain
ENV LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib/x86_64-linux-gnu/"
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/vmaf/vmaf-2.3.0/libvmaf/build/src/
